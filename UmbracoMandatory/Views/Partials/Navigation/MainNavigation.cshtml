@inherits Umbraco.Web.Mvc.UmbracoViewPage
@using Umbraco.Web
@{
    var site = Model.Root();
    var selection = Model.Root().Children.Where(x => x.IsVisible()).ToArray();
}

@if (selection.Length > 0)
{
    <ul class="navbar-nav">
        <li class="nav-item @Html.Raw(Model.Id == site.Id ? "active" : "")">
            <a class="nav-link" href="@site.Url">@site.Name</a>
        </li>
        @foreach (var item in selection)
        {
            var subItems = item.Children().Where(x => x.IsVisible() && (x.HasProperty("projectStatus") ? x.GetProperty("projectStatus").Value<string>() == "Completed" : true));
            bool hasChildren = subItems.Count() > 0;

            if (Umbraco.MemberHasAccess(item.Path))
            {
                <li class="nav-item @(item.IsAncestorOrSelf(Model) ? "active" : null) @(hasChildren ? "dropdown" : null)">
                    @if (hasChildren)
                    {
                        <a class="nav-link dropdown-toggle" href="@item.Url" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">@item.Name</a>

                        <div class="dropdown-menu" aria-labelledby="navbarDropdown">
                            @foreach (var subItem in subItems)
                            {
                                if (Umbraco.MemberHasAccess(subItem.Path))
                                {
                                    <a class="dropdown-item" href="@subItem.Url">@subItem.Name</a>
                                }
                            }
                            <div class="dropdown-divider"></div>
                            <a class="dropdown-item" href="@item.Url">Show All</a>
                        </div>
                    }
                    else
                    {
                        <a class="nav-link" href="@item.Url">@item.Name</a>
                    }
                </li>
            }
        }
    </ul>
}
